version: '3.8'
services:
  api-gateway:
    user: root
    container_name: api-gateway
    build:
      context: ./api-gateway/api-gateway
      dockerfile: Dockerfile
    volumes:
      - ./api-gateway/api-gateway/ocelot.json:/app/ocelot.json
    depends_on:
      - dictionary-parser
      - authorization-module
      - personal-vocab
      # - rabbitmq
      - postgres
    ports:
      - "8090:80"
    networks:
      - backend

  dictionary-parser:
    container_name: dictionary-parser
    build:
      context: ./dictionary-parser
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - backend

  authorization-module:
    container_name: authorization-module
    build:
      context: ./authorization-module
      dockerfile: Dockerfile
    depends_on:
      - postgres
    networks:
      - backend
    environment:
      DB_CONNECTION_STRING: "Server=127.0.0.1; Port=5454; Database=glosslore; User Id=postgres; Password=123"

  personal-vocab:
    container_name: personal-vocab
    build:
        context: ./personal-vocab
        dockerfile: Dockerfile
    networks:
     - backend
    depends_on:
      - postgres_pv  
      # - rabbitmq
    environment:
        DB_CONNECTION_STRING: "Server=127.0.0.1;Port=5455;Database=personal-vocab; User Id=postgres;Password=pv123"
   
  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:3-management
  #   ports:
  #   - "5672:5672"
  #   - "15672:15672"
  #   networks:
  #   - backend
  #   environment:
  #       RABBITMQ_DEFAULT_USER: "guest"
  #       RABBITMQ_DEFAULT_PASS: "1234"

  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: glosslore
    ports:
      - "5454:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

    postgres_pv:
      container_name: postgres
      image: postgres:13
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: pv123
        POSTGRES_DB: personal-vocabulary
      ports:
        - "5455:5432"
      volumes:
        - postgres-data:/var/lib/postgresql/data
      networks:
        - backend

networks:
  backend:

volumes:
  postgres-data:
